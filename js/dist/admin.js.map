{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCKlDC,EAAoB,6CAO1BC,IAAAA,aAAAA,IAAqB,cAAc,WAC/BA,IAAAA,cAAAA,IACS,8BACJC,gBAAgB,CACbC,QAASC,2BACTC,KAAM,SACNC,MAAOL,IAAAA,WAAAA,MAAqBD,EAAoB,mBAEnDE,gBAAgB,CACbC,QAASC,mCACTC,KAAM,SACNC,MAAOL,IAAAA,WAAAA,MAAqBD,EAAoB,2BAEnDE,gBAAgB,CACbC,QAASC,yBACTC,KAAM,OACNC,MAAOL,IAAAA,WAAAA,MAAqBD,EAAoB,iBAEnDE,iBAAgB,WAA+B,IACxCK,EADwC,OAG5C,IACIA,EAASC,KAAKC,MAAMC,KAAKP,QAAQC,oBAAbM,IACtB,MAAOC,IAYT,OAPKC,MAAMC,QAAQN,KACfA,EAAS,CAAC,CACNO,KAAM,GACNC,KAAM,MAIPC,EAAE,cAAe,CACpBA,EAAE,QAASf,IAAAA,WAAAA,MAAqBD,EAAoB,WACpDgB,EAAE,QAAS,CACPA,EAAE,QAASA,EAAE,KAAM,CACfA,EAAE,KAAMf,IAAAA,WAAAA,MAAqBD,EAAoB,cACjDgB,EAAE,KAAMf,IAAAA,WAAAA,MAAqBD,EAAoB,cACjDgB,EAAE,SAENA,EAAE,QAAS,CACPT,EAAOU,KAAI,SAACC,EAAOC,GAAR,OAAkBH,EAAE,KAAM,CACjCA,EAAE,KAAMA,EAAE,oBAAqB,CAC3BX,KAAM,OACNT,MAAOsB,EAAMJ,MAAQ,GACrBM,SAAU,SAACC,GACPH,EAAMJ,KAAQO,EAAMC,OAA4B1B,MAChD,EAAKO,QAAQC,oBAAb,CAAwCI,KAAKe,UAAUhB,QAG/DS,EAAE,KAAMA,EAAE,oBAAqB,CAC3BX,KAAM,OACNT,MAAOsB,EAAMH,MAAQ,GACrBK,SAAU,SAACC,GACPH,EAAMH,KAAQM,EAAMC,OAA4B1B,MAChD,EAAKO,QAAQC,oBAAb,CAAwCI,KAAKe,UAAUhB,QAG/DS,EAAE,KAAMQ,IAAAA,UAAiB,CACrBC,UAAW,sBACXC,KAAM,eACNC,QAAS,WACLpB,EAAOqB,OAAOT,EAAO,GAErB,EAAKhB,QAAQC,oBAAb,CAAwCI,KAAKe,UAAUhB,aAInES,EAAE,KAAMA,EAAE,KAAM,CACZa,QAAS,GACVL,IAAAA,UAAiB,CAChBC,UAAW,uBACXE,QAAS,WACLpB,EAAOuB,KAAK,CACRhB,KAAM,GACNC,KAAM,KAGV,EAAKZ,QAAQC,oBAAb,CAAwCI,KAAKe,UAAUhB,MAE5DN,IAAAA,WAAAA,MAAqBD,EAAoB,uB","sources":["webpack://@clarkwinkelmann/typewriter/webpack/bootstrap","webpack://@clarkwinkelmann/typewriter/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/typewriter/webpack/runtime/define property getters","webpack://@clarkwinkelmann/typewriter/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/typewriter/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/typewriter/external root \"flarum.core.compat['admin/app']\"","webpack://@clarkwinkelmann/typewriter/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/typewriter/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\n\nconst settingsPrefix = 'typewriter.';\nconst translationPrefix = 'clarkwinkelmann-typewriter.admin.settings.';\n\ninterface Sound {\n    keys: string\n    file: string\n}\n\napp.initializers.add('typewriter', () => {\n    app.extensionData\n        .for('clarkwinkelmann-typewriter')\n        .registerSetting({\n            setting: settingsPrefix + 'muteByDefault',\n            type: 'switch',\n            label: app.translator.trans(translationPrefix + 'muteByDefault'),\n        })\n        .registerSetting({\n            setting: settingsPrefix + 'showIntroductionPopup',\n            type: 'switch',\n            label: app.translator.trans(translationPrefix + 'showIntroductionPopup'),\n        })\n        .registerSetting({\n            setting: settingsPrefix + 'defaultFile',\n            type: 'text',\n            label: app.translator.trans(translationPrefix + 'defaultFile'),\n        })\n        .registerSetting(function (this: ExtensionPage) {\n            let sounds: Sound[];\n\n            try {\n                sounds = JSON.parse(this.setting(settingsPrefix + 'sounds')());\n            } catch (e) {\n                // do nothing, we'll reset to something usable\n            }\n\n            // @ts-ignore variable used before assignment, it's fine\n            if (!Array.isArray(sounds)) {\n                sounds = [{\n                    keys: '',\n                    file: '',\n                }];\n            }\n\n            return m('.Form-group', [\n                m('label', app.translator.trans(translationPrefix + 'sounds')),\n                m('table', [\n                    m('thead', m('tr', [\n                        m('th', app.translator.trans(translationPrefix + 'head.keys')),\n                        m('th', app.translator.trans(translationPrefix + 'head.file')),\n                        m('th'),\n                    ])),\n                    m('tbody', [\n                        sounds.map((sound, index) => m('tr', [\n                            m('td', m('input.FormControl', {\n                                type: 'text',\n                                value: sound.keys || '',\n                                onchange: (event: InputEvent) => {\n                                    sound.keys = (event.target as HTMLInputElement).value;\n                                    this.setting(settingsPrefix + 'sounds')(JSON.stringify(sounds));\n                                },\n                            })),\n                            m('td', m('input.FormControl', {\n                                type: 'text',\n                                value: sound.file || '',\n                                onchange: (event: InputEvent) => {\n                                    sound.file = (event.target as HTMLInputElement).value;\n                                    this.setting(settingsPrefix + 'sounds')(JSON.stringify(sounds));\n                                },\n                            })),\n                            m('td', Button.component({\n                                className: 'Button Button--icon',\n                                icon: 'fas fa-times',\n                                onclick: () => {\n                                    sounds.splice(index, 1);\n\n                                    this.setting(settingsPrefix + 'sounds')(JSON.stringify(sounds));\n                                },\n                            })),\n                        ])),\n                        m('tr', m('td', {\n                            colspan: 3,\n                        }, Button.component({\n                            className: 'Button Button--block',\n                            onclick: () => {\n                                sounds.push({\n                                    keys: '',\n                                    file: '',\n                                });\n\n                                this.setting(settingsPrefix + 'sounds')(JSON.stringify(sounds));\n                            },\n                        }, app.translator.trans(translationPrefix + 'add'))))\n                    ]),\n                ]),\n            ]);\n        });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","translationPrefix","app","registerSetting","setting","settingsPrefix","type","label","sounds","JSON","parse","this","e","Array","isArray","keys","file","m","map","sound","index","onchange","event","target","stringify","Button","className","icon","onclick","splice","colspan","push"],"sourceRoot":""}